Victor's Graphical Chess Program's CHANGELOG
Here you can find a somewhat curated and chronological list of notable changes
The following entries deal mostly with changes to the actual software not with changes to the documentation, etc.
NOTE: These entries may not contain every single minor change but should contain all major changes

2021-01-23	version 00-0001
	Added a draw as a possible result of a match.
	NOTE: Currently a match can only result in a draw as a result of a stalemate.

	source file changes
		* src/move.c (movePiece): now checks for stalemate after a move
		* src/draw.c (drawGameOverText): now (if a match results in a draw) the text is "DRAW"
		* src/main.c (gameOver): now handles matches that result in a draw

	header file changes
		* include/vgcp.h: updated function prototypes,
			changed the default window size to 1000x1000

2021-01-24	version 00-0002
	Made the code nicer (switched the color variable(s) to "color_t" from "bool") and made other optimizations.

	source file changes
		* (almost) all: switched color variables to "color_t",
			optimized code

	header file changes
		* inclue/vgcp.h: created new macros,
			created the "color_t" type,
			updated function prototypes

2021-02-02	version 00-0003
	Now warns user on runtime when using the _DEBUG and warns user on runtime & compilation when the _NO_PERSPECTIVE_CHANGE is disabled,
	now moves use the structure "move"

	source file changes
		* src/main.c (main): Now warns of "unwanted" options being used on runtime (_DEBUG & _NO_PERSPECTIVE_CHANGE)
		* src/main.c (handleMousebuttonEvent): Updated function call to movePiece
		* src/move.c (movePiece): updated function arguments, optimized handling of castling,
			now uses the structure "move"

	header file changes
		* include/vgcp.h: updated function prototypes,
			now warns of _NO_PERSPECTIVE_CHANGE not being enabled,
			created the structure "move"

2021-02-02	version 00-0004
	Created the "label" structure, optimized code, etc

	source file changes
		* src/init.c (loadMedia): now uses the "label" structure,
			loads the texture rectangle & background during creation and not during drawing.
		* src/draw.c (drawGameOverText): uses the "label" structure now
		* src/piece.c (mapKingPotentialMoves): optimized castling

2021-02-03	version 00-0005
	Created the move list, which currently doesn't do anything useful.
	
	source file changes
		* created a new source file src/move_list.c
		* str/move.c (movePiece): now adds to the list of moves after move

	header file changes
		* include/vgcp.h: added the move list structure, updated prototypes

2021-02-05	version 00-0006
	Added "capture" boolean to the move structure and added support for the 50-move rule (= added the halfmove clock), fixed a bug (crashing on clicking off board)

	source file changes
		* src/move.c: created new function for updating the halfmove clock (updateHalfmoveClock)
		* src/move.c (movePiece): now updates the halfmove clock after piece has moved 
			and checks for a draw as a result of the 50-move rule.

	header file changes
		* include/vgcp.h: added the capture boolean to the move structure, updated prototypes

2021-02-06	version 00-0007
	Now stores the game state into the (new) position structure. The position structure stores the board, castling rights, the previous move and the player that will move next. This will be useful when checking for repitition (when storing a list of them).

	source file changes
		* created a new source file for updating and initializing the current position (src/position.c)
		* almost all: Now uses the position structure.
		* src/move.c: created a new function specifically to handle castling (castleKing),
			created a new function specifically to handle adding a potential castling move
			(addPotentialCastling)
		* src/move.c (movePiece): no longer handles castling, 
			now removes castling rights here if rook or king moves
		* src/move.c: (addPotentialMove): no longer handles adding potential castling

	header file changes:
		* include/vgcp.h: created the position structure, updated prototypes

	EDIT: removed blank line (2021-02-12)

2021-02-12	version 00-0008
	Changed the moveList structure into the positionList structure which stores the entire chess position. The position list will be used to check repitition.
	
	source file changes
		* created a new source file for the position list (src/position_list.c)
		* src/move.c (movePiece): now updates the position list (not the move list)

	header file changes
		* include/vgcp.h: created the position list structure, updated prototypes 

2021-02-17	version 00-0009
	Implemented En Passant.

	source file changes
		* src/move.c: created new functions for en passant (enPassant, addPotentialEnPassant)
		* src/piece.c (mapPawnPotentialMoves): now checks if en passant is a potential move and adds it if it is

	header file changes
		* include/vgcp: added "potentialEnPassant" to the tileState enum, updated prototypes 

2021-02-23	version 00-000A
	Implemented threefold repitition. If the same position repeats thrice then the game results in a draw. The implementation isn't perfect because (for example) it doesn't take into account the "En Passant" rights when counting repetitions. Also, fixed a compilation error related to variable definitions in the header files and some other bugs.

	source file changes
		* src/main.c: now defines variables here
		* src/move.c (movePiece): now calls the "checkForRepitition" function to check for threefold repitition
		* src/positionList: created new function for checking repitition (checkForRepitition) and created related static functions (compareBoards, compareCastlingRights) 
		* src/positionList (addToPositionList): optimized memory usage (wipes the list clean if an irreversible move occurs)

	header file changes
		* include/vgcp: now all variable definitions are "extern"s

2021-02-24	version	00-000B
	WARNING: I have noticed some odd checkmate related bugs in this version.
		 Please create an issue on github or contact me on email (theshoutingparrot@protonmail.com)
	Implemented draw as a result of insufficent material and now correctly checks repitition.

	source file changes
		* src/piece: created new function for checking if there aren't enough pieces for a checkmate (checkIfEnoughPieces)
		* src/move.c (movePiece): now calls the checkIfEnoughPieces to check for enough pieces
		* src/position.c (updatePosition): now updates the amount of pieces (piecesArray)
		* src/position_list.c (checkForRepitition): corrected repitition checking

	header file changes
		* include/vgcp: added warning about unstability of this program (for now),
			added an array of pieces (piecesArray) which stores the amount of different pieces on the board

2021-02-24	version	00-000C
	WARNING: The previous warning (on version 00-000B) also applies to this version.
	Changed default size of window to 800x800 and merged src/position.c and src/position_list.c

	source file changes
		* src/position.c: merged file with position_list.c

	header file changes
		* include/vgcp.h: changed default window size definitions, slightly changed wording of warnings

	Edit 2021-02-25: added warning

2021-02-25	version	00-000D
	GOOD NEWS: The checkmate related bug has been fixed.
	Fixed the odd checkmate related bug (stalemates resulting in checkmates for example), moved the kingLocation variable to the position structure, fixed other errors.

	source file changes
		* src/position.c (initPosition): moved kingLocation initializing here
		* src/move.c (movePiece): fixed kingLocation not being properly set
		* src/draw.c (drawBoardRow): now the tile that the king is in (according to king location)
			is red.
		* src/piece.c (mapKingPotentialMoves): fixed a bug allowing players to castle 
			even after castling rights have been lost if the other player still has castling
			rights.

2021-02-26	version 00-000E
	Now the program repitition checker checks for en passant rights also (very untested at the moment)

	source file changes
		* src/position.c (initPosition): initializes en passant rights
		* src/position.c (checkForRepitition): now checks if en passant rights repeat
		* src/move.c (movePiece): now updates en passant rights when a pawn is moved
	
	header file changes
		* include/vgcp.h: added the enPassantRights array to the position structure

	EDIT 2021-02-26: fixed sentence

2021-02-26	version 00-000F
	Removed the _NO_PERSPECTIVE_CHANGE option and removed support for changing perspective, removed unnecessary delays

	source file changes
		* src/draw.c (drawBoard): removed support for changing perspective

	header file changes
		* include/config.h: removed the _NO_PERSPECTIVE_CHANGE option

2021-02-28	version 00-0010
	Implemented command-line arguments: -v (for version) and -h (for help)

	source file changes
		* src/main.c (main): added command-line argument parsing,
			removed version printing at the start of execution
		* src/util.c: added two new functions: usage and help

	header file changes
		* include/vgcp.h: updated prototypes

2021-03-16	version 00-0011
	WARNING: All features added in this version are extremely unreliable!
	Implemented a "demo" chess protocol that enables "3rd party" programs to make moves as a player. In the future this will be used for playing against AI.
	This whole chess protocol implementation will be fully rewritten (hopefully in the next update).

	source file changes:
		* added a new file that contains all socket/communication/connection related things (src/connection.c)
			This file contains the implementation of the chess protocol (which is my own)
		* src/main.c: implemented the chess protocol, added a new command line argument to specify the port in which black is playing
			(if this argument isn't used then the game continues normally)

	header file changes
		* include/vgcp.h: added the server and msg structures, updated the prototypes.

	PS: if you were wondering about why this hasn't been updated for a while here's the reason: 
	I haven't really been able to work on this project for a long time mostly due to school getting really intense and generally distance school starting (yet again).

2021-03-22	version 00-0012
	Made the socket connection non-blocking so that the program can now exit even while waiting for a message.

	source file changes
		* src/connection.c (connectToBlack): now sets the socket to be nonblocking.
		* src/connection.c: now can quit even when expecting a message from the client

	header file changes
		* include/vgcp.h: updated prototypes
		* include/config.h: added new option for debugging the socket related code called _SOCKET_DEBUG

	EDIT 2021-03-24: very small stylistic change 

2021-03-24	version 00-0013
	Now implemented white moving via sockets and optimized some code.

	source file changes
		* src/connection.c: added new functions to handle the connection with the white connection.
		* src/main.c (main): added a new command line argument in which the user can specify white's connection port ("-w")
		* src/util.c (help): added more information about new command line arguments ("-b" and "-w")

	header file changes
		* include/vgcp.h: added new variables (msgToWhite, msgWhite), updated and added new prototypes
